--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.6) ~  Much Love, Ferib 
fuck yourself
]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==5) then v29=nil;function v29(v30,v31,v32)local v38=v30[1];local v39=v30[2];local v40=v30[3];return function(...)local v64=1;local v65= -1;local v66={...};local v67=v11("#",...) -1;local function v68()local v72=v38;local v73=Const;local v74=v39;local v75=v40;local v76=v27;local v77={};local v78={};local v79={};for v88=0,v67 do if ((917<(12401 -7882)) and (v88>=v75)) then v77[v88-v75]=v66[v88 + (1 -0)];else v79[v88]=v66[v88 + (1333 -(655 + 677))];end end local v80=(v67-v75) + (2 -1);local v81;local v82;while true do local v89=0 -0;local v90;while true do if ((v89==(0 + 0)) or (((3260 -(1053 + 884)) + 1547)<(3008 -(57 + 902)))) then v90=878 -(496 + 382);while true do if (((4342 -2891)>=(1572 -(169 + 207))) and (v90==(1651 -(735 + 915)))) then if (((4643 -(693 + 203))>(15822 -12299)) and (v82<=10)) then if (((2021 -(495 + 125))<=(362 + 1122)) and (v82<=(4 + 0))) then if ((((10543 -(962 + 422)) -7129)>(881 -624)) and (v82<=(3 -2))) then if (((9784 -5629)>(2390 -(431 + 1015))) and (v82==(0 -0))) then local v120=521 -(181 + (551 -(187 + 24)));local v121;local v122;local v123;while true do if (((2351 -(651 + 327))<=(2579 + 1885)) and (v120==((86 + 400) -((890 -(91 + 451)) + 137)))) then v123=nil;while true do if (((2709 + 1761)==(1634 + 2836)) and (v121==(2 -1))) then v79[v122 + 1]=v123;v79[v122]=v123[v81[8 -(1117 -(549 + 564))]];break;end if (((7601 -3539)==((24426 -12529) -7835)) and (v121==(121 -(102 + 19)))) then local v179=976 -(439 + 537);local v180;while true do if (((5728 -(162 + 772))==((7740 -(545 + 436)) -(1533 + 432))) and (v179==((0 -0) -0))) then v180=0 -0;while true do if ((v180==(1524 -(76 + 1448))) or ((817 + 172 + 434)>=(524 + (4286 -(536 + 12))))) then local v205=(2891 -(1451 + 302)) -((350 -226) + 1014);while true do if (((6422 -1730)==(9372 -4680)) and ((568 -(444 + 124))==v205)) then v122=v81[7 -5];v123=v79[v81[4 -1]];v205=1943 -(1728 + 214);end if (((32 + 272)<(1101 -512)) and (v205==(1 + 0))) then v180=1 -0;break;end end end if ((1212<=(4855 -1701)) and (((2 -1) + 0)==v180)) then v121=1 + (0 -0);break;end end break;end end end end break;end if (((208 -(14 + (91 -68)))<(13424 -9253)) and (v120==(0 -0))) then local v165=974 -(587 + 387);while true do if ((v165==(0 -(0 + 0))) or ((878 -(109 + 170))>=(2239 -(600 + 306)))) then v121=0 -0;v122=nil;v165=2 -1;end if ((v165==(2 -1)) or ((730 + 2782)==(8434 -6211))) then v120=1 + 0;break;end end end end else local v124=0 -0;local v125;local v126;local v127;local v128;local v129;while true do if ((v124==(0 -0)) or (58>=(3346 -2061))) then v125=0 + 0;v126=nil;v124=3 -2;end if (((365 -(66 + 126))<(5495 -(520 + 113))) and (v124==(1 + 0))) then v127=nil;v128=nil;v124=2 + 0;end if (((23 -(9 + 12))==v124) or ((2473 + 125)==((594 -397) + 162))) then v129=nil;while true do if (((217 -(190 + 27))==v125) or ((8608 -6079)<435)) then local v181=0 -0;while true do if (((1 -0)==v181) or ((4402 -(3167 -1049))>=(4948 -(146 + (236 -113))))) then v125=(1857 -(1074 + 704)) -(73 + 5);break;end if ((v181==0) or ((586 -((1056 -723) + (154 -99)))>(3490 -(753 + 267)))) then v126=v81[2 + 0];v127,v128=v76(v79[v126](v12(v79,v126 + (2 -1),v81[5 -2])));v181=1;end end end if (((10140 -6557)<=(3278 + (5202 -3884))) and (v125==(1601 -(478 + 1121)))) then for v184=v126,v65 do local v185=1347 -(784 + 563);local v186;while true do if ((v185==(1166 -(288 + 878))) or ((3158 -1772)>=(9155 -6632))) then v186=573 -(349 + 224);while true do if (((913 + 1199)<=(5509 -(1506 + 431))) and (v186==(0 -(0 -0)))) then v129=v129 + (1873 -(1657 + (891 -(412 + 264))));v79[v184]=v127[v129];break;end end break;end end end break;end if ((v125==(1 + 0)) or ((6828 -4883)<(3550 -2336))) then local v182=0 + (0 -0);while true do if (((1018 + (358 -210))<(229 + 1113)) and (v182==(221 -(171 + 50)))) then v65=(v128 + v126) -(2 -1);v129=33 -(22 + 11);v182=1 -0;end if ((v182==(3 -2)) or ((3921 -(606 + 305))>=((2753 -(1129 + 18)) + 1606))) then v125=1180 -((538 -310) + 93 + 857);break;end end end end break;end end end elseif (((479 + 2275)<(4886 -(628 + 242 + 546 + 293))) and (v82<=(3 -1))) then if (((5234 -(332 + 28 + 58))>(7850 -(276 + 5827))) and (v81[1 + (1 -0)]==v79[v81[1703 -(1518 + 181)]])) then v64=v64 + (1 -0);else v64=v81[3 + 0];end elseif ((v82>(13 -10)) or ((1502 -849)==(1499 + 509))) then v79[v81[1 + 1]]();else v79[v81[592 -(152 + 438)]]=v31[v81[14 -11]];end elseif ((v82<=(1380 -(226 + 1147))) or ((1977 -1050)>(531 + 647))) then if ((3472==(4319 -(808 + (951 -(116 + 796))))) and (v82<=(904 -(416 + 483)))) then if (((4818 -(436 + 277))==4105) and (v79[v81[1446 -(743 + (1744 -1043))]]==v81[9 -5])) then v64=v64 + 1 + 0;else v64=v81[(488 -(8 + 475)) -2];end elseif (((5081 -(249 + 1610))<=(338 + 3798)) and (v82==(1098 -(148 + (1287 -(31 + 312)))))) then v79[v81[1 + 1]]=v79[v81[7 -(1965 -(1486 + 475))]];else local v146=0 + 0;local v147;local v148;while true do if (((3052 -(845 + (3248 -2151)))<=(4625 -2271)) and (v146==((435 -(104 + 330)) -0))) then while true do if (((1819 -(472 + 1168))==(251 -72)) and (v147==(0 -0))) then v148=v81[5 -3];v79[v148]=v79[v148](v79[v148 + (1610 -((3248 -(424 + 1411)) + 196))]);break;end end break;end if (((3952 -(323 + 177))>=(3514 -(5 + 192))) and ((0 + 0)==v146)) then v147=0 -0;v148=nil;v146=876 -(502 + 373);end end end elseif (((2408 + 66)==(10813 -8339)) and (v82<=(248 -(30 + 12 + 198)))) then v79[v81[9 -7]][v81[3]]=v81[2 + (2 -0)];elseif ((115<(1 + 224)) and (v82==(19 -10))) then v64=v81[3];else local v149=1741 -(11 + (2927 -(97 + 1100)));local v150;while true do if (((3095 -1379)>=(465 + 55)) and (v149==(0 -0))) then v150=v81[3 -(1547 -(1194 + 352))];v79[v150](v79[v150 + (2 -1)]);break;end end end elseif ((v82<=(36 -20)) or ((3101 -894)>=(3019 + 140 + 1806))) then if ((((1739 -(830 + 58)) -(104 + 422))<(3882 -(456 + 1492))) and (v82<=(8 + 5))) then if ((v82<=(765 -(152 + 602))) or ((2630 -(1668 + 116))<(1010 -602))) then local v131=0 -0;local v132;local v133;while true do if (((3047 -1216)<=(2432 + 2320)) and ((0 + 0)==v131)) then v132=v81[2 -0];v133={};v131=919 -(627 + 291);end if (((11799 -8716)==(817 + 2266)) and (v131==1)) then for v167=2 -1, #v78 do local v168=0 + 0;local v169;local v170;local v171;while true do if ((v168==(1 + 0)) or ((1797 -821)==(8491 -3693))) then v171=nil;while true do if (((1077 + 741)==(3264 -((1721 -637) + 362))) and (v169==((6 -4) -1))) then while true do if (((1842 + 3119)>(1337 -421)) and (v170==(0 -0))) then v171=v78[v167];for v207=0 -0, #v171 do local v208=0 + 0;local v209;local v210;local v211;while true do if (((2419 -1852)<=2788) and ((1160 -((1603 -(1030 + 130)) + 717))==v208)) then local v218=1687 -(241 + 1446);while true do if (((1892 + 493)<=(2363 + 2608)) and (v218==(3 -2))) then v208=2 -1;break;end if ((v218==(552 -((1934 -(1129 + 316)) + 63))) or ((1222 -(13 + 403))>=(2471 + 1781))) then v209=v171[v207];v210=v209[1 + 0];v218=(1901 -(118 + 829)) -(816 + 137);end end end if ((v208==1) or ((4048 -(62 + 513))<=(11214 -7935))) then v211=v209[878 -(851 + 25)];if (((v210==v79) and (v211>=v132)) or (((581 -423) + 100)>=(1150 -(210 + 131)))) then local v226=0 + 0 + 0;local v227;while true do if ((v226==(460 -(114 + 346))) or ((3576 -(1659 + 310))<((2341 -(213 + 81)) -1081))) then v227=0 + 0;while true do if (((412 + 877)<=(1282 + 1304)) and (v227==(1793 -(715 + 1078)))) then v133[v211]=v210[v211];v209[1 -0]=v133;break;end end break;end end end break;end end end break;end end break;end if ((v169==(0 -0)) or ((4551 -(466 + 283))<=(5525 -(1625 + 270)))) then local v202=0 + 0;while true do if (((5950 -(1026 + 55))>(8270 -5511)) and (v202==(1384 -(270 + 1114)))) then v170=158 -(143 + 15);v171=nil;v202=4 -(848 -(623 + 222));end if ((v202==(1 + 0)) or ((32 + 959 + 3339)<(75 + 93))) then v169=2 -1;break;end end end end break;end if ((v168==(0 + 0)) or ((4192 -(72 + 569))>(7961 -3466))) then v169=0 + 0;v170=nil;v168=2 -1;end end end break;end end elseif (((6965 -4451)==(4063 -((2723 -(798 + 786)) + 410))) and (v82>((4933 -2969) -(1351 + 601)))) then local v151=195 -(25 + 170);local v152;local v153;local v154;local v155;while true do if ((v151==(0 + 0 + 0)) or ((4527 -1352)>(5005 -((1003 -(560 + 125)) + 1263)))) then local v172=304 -(63 + 241);while true do if (((1368 + 1680)>(1767 -978)) and (v172==(0 + 0))) then v152=0 + 0;v153=nil;v172=1 + 0;end if ((v172==(1 + 0)) or ((2645 -(586 + 1181))>(4276 -(71 + 1712)))) then v151=1 + 0;break;end end end if (((3385 + (2174 -(525 + 499)))>=(5039 -((3190 -2150) + 901))) and (v151==(1512 -(1422 + 88)))) then while true do if ((v152==(2 -0)) or ((1713 -(4 + (3163 -(1465 + 479))))>=(2246 -1307))) then for v198=2 -1,v81[1563 -(737 + 822)] do local v199=0 -0;local v200;local v201;while true do if (((378 + 3240)==3618) and (v199==(2 -1))) then while true do if ((v200==(0 -0)) or ((2191 -645)>(5958 -2959))) then local v214=0;while true do if (((11819 -8531)==(4211 -(899 + 24))) and (v214==(1551 -(230 + 1320)))) then v200=1654 -(458 + 1195);break;end if (((197 + 1847)<(10961 -7115)) and (v214==((0 + 0) -0))) then v64=v64 + 1 + 0 + 0;v201=v72[v64];v214=816 -(230 + 585);end end end if (((4214 -(1093 + 29))==(1995 + 1097)) and (v200==(1 -0))) then if (((3825 -1551)>(7660 -5579)) and (v201[1]==(20 -14))) then v155[v198-((1911 -(1539 + 371)) + 0 + 0)]={v79,v201[(1 -0) + 2]};else v155[v198-(2 -1)]={v31,v201[5 -2]};end v78[ #v78 + (991 -(951 + 39))]=v155;break;end end break;end if (((42 + 1590 + 1393)<(2235 + 1305)) and (v199==(1711 -(45 + 1666)))) then v200=0 + 0;v201=nil;v199=1;end end end v79[v81[1752 -(1221 + 529)]]=v29(v153,v154,v32);break;end if ((164<=(2233 -901)) and ((2 -1)==v152)) then local v189=0 + 0;local v190;while true do if (((1219 + 185)>=(1835 -(698 + 34))) and (v189==(0 + 0))) then v190=0;while true do if (((2808 + 1490)>=(2157 -(115 + 1604))) and (v190==(639 -((715 -455) + 378)))) then v152=2 + 0;break;end if (((0 + 0)==v190) or ((4862 -(13 + 12 + 120))<=(1116 + 2723))) then local v212=66 -(45 + 21);while true do if ((v212==(1 -0)) or ((6578 -(76 + 1875))<(182 + 76))) then v190=1 -0;break;end if (((6934 -4206)>(405 + 2111)) and (v212==(0 + 0))) then v155={};v154=v9({},{__index=function(v221,v222)local v228=0;local v229;local v230;while true do if (((2606 -(543 + 1366))<(5377 -(686 + 475))) and (v228==(1 + 0))) then while true do if (((2637 -888)==(2266 -((635 -343) + 225))) and (v229==(0 + 0))) then v230=v155[v222];return v230[1069 -(768 + 300)][v230[1857 -(1041 + 524 + 290)]];end end break;end if ((v228==(0 + 0)) or (((3893 -2634) + 1547)<(1567 -(157 + 1027)))) then v229=841 -(635 + 206);v230=nil;v228=1 -0;end end end,__newindex=function(v223,v224,v225)local v231=0 + 0;local v232;while true do if (((0 -(1312 -(820 + 492)))==v231) or ((3372 -2031)==((3186 -(278 + 1098)) + 1929))) then v232=v155[v224];v232[1][v232[164 -(71 + 91)]]=v225;break;end end end});v212=2 -1;end end end end break;end end end if (((3206 + 319)==(6265 -2740)) and (v152==(0 + 0))) then local v191=0;local v192;while true do if ((v191==(1741 -(921 + 820))) or ((2165 -(67 + 1487))==(2526 + 43 + 296))) then v192=0 -0;while true do if (((3335 -1091)>(3752 -(641 + 1057))) and (v192==(0 -0))) then v153=v74[v81[1398 -(997 + 398)]];v154=nil;v192=1 -(395 -(23 + 372));end if (((1642 + 2111)<=(2300 + 1732)) and (v192==(1 + 0 + 0))) then v152=1 + 0;break;end end break;end end end end break;end if (((3055 -((4378 -3454) + 388))<(91 + 2171)) and ((1 -0)==v151)) then local v173=0 -0;while true do if (((7233 -(11731 -6832))<(13880 -9059)) and (v173==(0 + 0))) then v154=nil;v155=nil;v173=2 -1;end if ((v173==(2 -1)) or ((4497 -(526 + 183))>=(7063 -2551))) then v151=328 -(262 + 64);break;end end end end else v79[v81[6 -4]]=v81[11 -8];end elseif ((v82<=(4 + 10)) or ((4630 -(399 + 52))>=(5503 -(118 + 1042)))) then v79[v81[2 + 0]][v81[1 + 2]]=v79[v81[1671 -(232 + (4585 -3150))]];elseif (((1934 -((1204 -(653 + 447)) + 6))>=(740 + (3354 -2325))) and (v82>(42 -27))) then v79[v81[2 -0]]=v32[v81[8 -5]];else v79[v81[1061 -(375 + 684)]]=v79[v81[3 + 0]][v81[14 -10]];end elseif ((v82<=(68 -(492 -(60 + 383)))) or ((4322 -(164 + 1186))<(4511 -(1812 + 571)))) then if ((v82<=(4 + 13)) or ((3351 -(91 + 432))<(799 + 1505))) then for v142=v81[457 -(39 + 277 + 139)],v81[895 -(466 + 426)] do v79[v142]=nil;end elseif ((v82>(8 + 9 + 1)) or ((2627 + 194 + 669)>(6117 -(840 + 949)))) then local v159=0 + 0;local v160;local v161;while true do if (((37 + 110)<(6503 -1928)) and (v159==(0 -0))) then v160=1531 -(189 + 1342);v161=nil;v159=1 -0;end if ((v159==(1 -0)) or ((2096 + 11 + 9)>=(3254 -(298 + 171)))) then while true do if (((0 + 0)==v160) or ((26 + 518 + 1194)==(5630 -3543))) then v161=v81[1 + 1];v79[v161](v12(v79,v161 + 1 + 0 + 0,v81[2 + 1]));break;end end break;end end else do return;end end elseif ((v82<=((213 -144) -49)) or ((17738 -13302)<=(6131 -2144))) then local v135=(0 + 0) -0;local v136;local v137;while true do if (((168 + 1179)>1178) and (v135==(0 + 0))) then v136=0 + 0;v137=nil;v135=2 -(1 + 0);end if (((190 + 805)==(2037 -(689 + 353))) and (v135==(1 + (1425 -(22 + 1403))))) then while true do if ((1799<(12479 -9353)) and (v136==(710 -(240 + (1442 -972))))) then v137=v81[5 -3];v79[v137]=v79[v137](v12(v79,v137 + 1 + 0 + 0,v65));break;end end break;end end elseif (((228 + 758)<(4336 -1019)) and (v82>(1272 -(887 + 364)))) then local v162=0 + 0;local v163;while true do if (((642 -(338 + 271))<=((13241 -7969) -(143 + 264))) and (v162==(0 -0))) then v163=v81[3 -1];v79[v163]=v79[v163](v12(v79,v163 + (319 -(103 + 215)),v81[(24 -13) -8]));break;end end else v79[v81[(325 -(155 + 167)) -1]]=v29(v74[v81[1653 -(13 + 1637)]],nil,v32);end v64=v64 + (3 -2) + 0;break;end if ((v90==(0 -0)) or ((816 + 1566)>(464 + 2050))) then local v100=(4723 -2735) -(1753 + 235);while true do if (((4282 + 192)>(3072 + 1021)) and (v100==(1 + 0))) then v90=1391 -(387 + 1003);break;end if ((v100==(1123 -(1021 + 102))) or (((708 -301) + 222)>=(1526 + 1821))) then v81=v72[v64];v82=v81[4 -3];v100=(1867 -(146 + 1720)) -0;end end end end break;end end end end A,B=v27(v10(v68));if  not A[1] then local v83=0;local v84;while true do if (v83==0) then v84=v30[4][v64] or "?";error("Script error at ["   .. v84   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end end;end return v29(v28(),{},v16)();end if (4==v17) then v27=nil;function v27(...)return {...},v11("#",...);end v28=nil;function v28()local v41=1308 -(614 + 694);local v42;local v43;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (2~=v41) then else v46=nil;v47=nil;v41=13 -10;end if (v41==1) then v44=nil;v45=nil;v41=2;end if (v41~=(0 + 0)) then else v42=0;v43=nil;v41=1;end if (3~=v41) then else v48=nil;v49=nil;v41=4;end if (v41==(4 + 0)) then while true do if (v42==1) then v45=nil;v46=nil;v42=245 -(26 + 217);end if ((2 + 1)==v42) then v49=nil;while true do if (v43~=(769 -(352 + 415))) then else local v94=0;while true do if (v94==(0 -0)) then for v102=1,v48 do local v103=0 + 0;local v104;local v105;while true do if (v103==(1486 -(895 + 591))) then local v111=1205 -(267 + 938);local v112;while true do if (v111==0) then v112=0 + 0;while true do if (v112==(1193 -(607 + 585))) then v103=1 + 0;break;end if (v112~=0) then else local v166=0;while true do if (v166==1) then v112=1;break;end if (v166==(1570 -(1233 + 337))) then v104=v21();v105=nil;v166=1;end end end end break;end end end if (v103~=(1 -0)) then else if (v104==1) then v105=v21()~=0;elseif (v104==(2 -0)) then v105=v24();elseif (v104~=3) then else v105=v25();end v49[v102]=v105;break;end end end v47[3]=v21();v94=729 -(150 + 578);end if ((250 -(8 + 241))~=v94) then else for v106=1,v23() do local v107=0;local v108;while true do if (v107==(874 -(515 + 359))) then v108=v21();if (v20(v108,1 + 0,1)~=(0 -0)) then else local v114=0 -0;local v115;local v116;local v117;local v118;local v119;while true do if (v114~=(541 -(397 + 144))) then else v115=0;v116=nil;v114=1107 -(50 + 1056);end if (v114~=(1 + 0)) then else v117=nil;v118=nil;v114=2;end if (v114~=2) then else v119=nil;while true do if (v115~=0) then else local v175=0 -0;while true do if (v175==0) then v116=0 -0;v117=nil;v175=1;end if ((1 + 0)==v175) then v115=1 + 0;break;end end end if ((471 -(10 + 459))==v115) then while true do if (v116==(3 + 0)) then if (v20(v118,3,10 -7)==1) then v119[4]=v49[v119[4]];end v44[v106]=v119;break;end if (v116~=0) then else local v194=1546 -(1206 + 340);while true do if (v194==(1160 -(92 + 1067))) then v116=1 + 0;break;end if (v194~=(884 -(315 + 569))) then else v117=v20(v108,2,3);v118=v20(v108,1 + 3,11 -5);v194=1;end end end if (v116~=(397 -(357 + 38))) then else local v195=241 -(137 + 104);while true do if (v195~=(0 + 0)) then else local v204=0 -0;while true do if (v204==1) then v195=1;break;end if (0~=v204) then else if (v20(v118,1482 -(631 + 850),1 -0)~=(1966 -(1731 + 234))) then else v119[3 -1]=v49[v119[2 + 0]];end if (v20(v118,5 -3,1 + 1)~=1) then else v119[1852 -(74 + 1775)]=v49[v119[3]];end v204=1 + 0;end end end if (v195~=1) then else v116=3;break;end end end if (1==v116) then local v196=0;local v197;while true do if (v196~=0) then else v197=0;while true do if (v197==1) then v116=1 + 1;break;end if (v197~=0) then else local v213=0;while true do if (v213~=(348 -(105 + 242))) then else v197=1 -0;break;end if (v213~=0) then else v119={v22(),v22(),nil,nil};if (v117==0) then local v233=0;local v234;while true do if (v233==0) then v234=0;while true do if (v234~=0) then else v119[2 + 1]=v22();v119[4]=v22();break;end end break;end end elseif (v117==1) then v119[3]=v23();elseif (v117==(427 -(372 + 53))) then v119[1943 -(1568 + 372)]=v23() -((442 -(6 + 434))^(53 -37));elseif (v117~=3) then else local v242=0;while true do if ((0 + 0)~=v242) then else v119[3]=v23() -(2^(59 -43));v119[14 -10]=v22();break;end end end v213=1;end end end end break;end end end end break;end if (v115~=1) then else local v176=1064 -(938 + 126);while true do if (v176==0) then v118=nil;v119=nil;v176=1;end if (v176==(1 + 0)) then v115=1 + 1;break;end end end end break;end end end break;end end end v43=814 -(684 + 127);break;end end end if (v43==0) then local v95=0 + 0;local v96;while true do if (0~=v95) then else v96=0;while true do if (v96~=(1 + 0)) then else v46={};v43=1;break;end if (v96==(0 + 0)) then local v109=0 + 0;while true do if (v109==(0 + 0)) then v44={};v45={};v109=1;end if (v109==1) then v96=2 -1;break;end end end end break;end end end if (v43==3) then local v97=0;local v98;while true do if (v97~=(0 + 0)) then else v98=0 + 0;while true do if (v98==0) then local v110=0 + 0;while true do if (v110~=1) then else v98=1;break;end if ((228 -(30 + 198))~=v110) then else for v138=1657 -(434 + 1222),v23() do v45[v138-(1 + 0)]=v28();end for v140=1,v23() do v46[v140]=v23();end v110=1;end end end if (v98==(1 + 0)) then return v47;end end break;end end end if (v43==(1298 -(981 + 316))) then local v99=0;while true do if (v99~=(1 -0)) then else v49={};v43=2 -0;break;end if (v99~=0) then else v47={v44,v45,nil,v46};v48=v23();v99=1 -0;end end end end break;end if (v42~=0) then else v43=717 -(462 + 255);v44=nil;v42=1;end if (v42==(3 -1)) then local v91=0;while true do if (v91~=(1 + 0)) then else v42=3;break;end if (v91~=0) then else v47=nil;v48=nil;v91=23 -(15 + 7);end end end end break;end end end v17=5;end if (v17==3) then function v24()local v50=0 -0;local v51;local v52;while true do if (v50==((2308 -1422) -(832 + 53))) then return (( -(797 -(612 + 183)) * v20(v52,(1863 -817) -(42 + (2300 -(1290 + 38))))) + 1 + 0) * ((1 + 1)^(v20(v52,(665 -(601 + 49)) + 1 + 5,5 + 26) -(2547 -(553 + 971)))) * ((((v20(v52,1,6 + 14) * ((1 + 0 + 1)^(17 + 15))) + v51)/((1087 -(87 + 998))^(1331 -(728 + 551)))) + 1);end if (v50==(451 -(434 + 17))) then v51=v23();v52=v23();v50=3 -2;end end end v25=nil;function v25(v33)local v53=1194 -(555 + 49 + 590);local v54;local v55;while true do if (v53==1) then v54=v3(v15,v18,(v18 + v33) -(2 -1));v18=v18 + v33;v53=2;end if (v53==((1 + 3) -1)) then return v6(v55);end if (v53==(0 -0)) then v54=nil;if  not v33 then v33=v23();if (v33==(1901 -(1197 + 704))) then return "";end end v53=1 -0;end if (v53==((1 + 3) -(7 -5))) then v55={};for v85=1 + (0 -0), #v54 do v55[v85]=v2(v1(v3(v54,v85,v85)));end v53=3;end end end v26=v23;v17=4;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v34)if (v1(v34,2)==79) then v19=v0(v3(v34,1,1));return "";else local v69=v2(v0(v34,16));if v19 then local v87=v5(v69,v19);v19=nil;return v87;else return v69;end end end);v20=nil;v17=1;end if (v17==1) then function v20(v35,v36,v37)if v37 then local v70=(v35/(2^(v36-(1 + 0))))%((1477 -(1220 + 255))^(((v37-((2 -1) + 0)) -(v36-1)) + 1 + 0));return v70-(v70%(1 + 0 + 0));else local v71=(2 + 0)^(v36-(1577 -(1418 + (373 -215))));return (((v35%(v71 + v71))>=v71) and ((1029 -(663 + 365)) -0)) or (0 -(1640 -(280 + 1360)));end end v21=nil;function v21()local v56=v1(v15,v18,v18);v18=v18 + 1;return v56;end v22=nil;v17=2;end if (v17==2) then function v22()local v57=0 + 0;local v58;local v59;while true do if (v57==(0 -(467 -(426 + 41)))) then v58,v59=v1(v15,v18,v18 + 2 + 0);v18=v18 + (4 -2);v57=1 + 0;end if (v57==(1248 -(696 + 201 + 271 + 79))) then return (v59 * (893 -637)) + v58;end end end v23=nil;function v23()local v60,v61,v62,v63=v1(v15,v18,v18 + 3);v18=v18 + (958 -(173 + 781));return (v63 * (15641716 + 1135500)) + (v62 * 65536) + (v61 * (491 -235)) + v60;end v24=nil;v17=3;end end end vv8());end
