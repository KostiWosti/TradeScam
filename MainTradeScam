--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.1.6) ~  Much Love, Ferib 
fuck yourself
]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=1;local v18;v15=v4(v3(v15,5),"..",function(v29)if (v1(v29,2)==79) then v18=v0(v3(v29,1,1));return "";else local v64=v2(v0(v29,16));if v18 then local v74=v5(v64,v18);v18=nil;return v74;else return v64;end end end);local function v19(v30,v31,v32)if v32 then local v65=0 + 0;local v66;while true do if ((0 -0)==v65) then v66=(v30/((5 -3)^(v31-(1 + 0))))%((6 -4)^(((v32-(1264 -(698 + 565))) -(v31-(1681 -(1045 + 635)))) + ((1868 -(738 + 163)) -(182 + 784))));return v66-(v66%(1861 -(166 + 1694)));end end else local v67=(6 -(1 + 3))^(v31-(1 + 0));return (((v30%(v67 + v67))>=v67) and (1 + 0 + 0)) or (0 -0);end end local function v20()local v37=v1(v15,v17,v17);v17=v17 + 1;return v37;end local function v21()local v38=0 + 0;local v39;local v40;while true do if (v38==((1500 -(463 + 1035)) -1)) then return (v40 * (34 + 222)) + v39;end if (v38==(0 + 0 + 0)) then v39,v40=v1(v15,v17,v17 + (1459 -(710 + 747)));v17=v17 + (6 -4);v38=3 -2;end end end local function v22()local v41=(1645 -(547 + 314)) -(386 + 398);local v42;local v43;local v44;local v45;while true do if (v41==1) then return (v45 * (77173879 -60396663)) + (v44 * (66085 -(392 + 157))) + (v43 * (866 -610)) + v42;end if (v41==0) then v42,v43,v44,v45=v1(v15,v17,v17 + (11 -8));v17=v17 + 4;v41=175 -(171 + 3);end end end local function v23()local v46=73 -(58 + (887 -(183 + 689)));local v47;local v48;while true do if ((0 + 0)==v46) then v47=v22();v48=v22();v46=408 -(44 + 31 + 332);end if (v46==(1 + 0)) then return (( -(363 -(163 + 198)) * v19(v48,1896 -(142 + 1722))) + (1622 -(1512 + 109))) * ((1900 -(552 + 1346))^(v19(v48,968 -(856 + 91),31) -(2929 -1906))) * ((((v19(v48,1 + 0,20) * ((1154 -(558 + 393 + 201))^32)) + v47)/((861 -(230 + 629))^(11 + 41))) + (2 -1));end end end local function v24(v33)local v49;if  not v33 then local v68=0 -(0 -0);while true do if (v68==0) then v33=v22();if (v33==(0 + 0)) then return "";end break;end end end v49=v3(v15,v17,(v17 + v33) -(1292 -(161 + 1130)));v17=v17 + v33;local v50={};for v61=626 -(341 + 284), #v49 do v50[v61]=v2(v1(v3(v49,v61,v61)));end return v6(v50);end local v25=v22;local function v26(...)return {...},v11("#",...);end local function v27()local v51=371 -(274 + 97);local v52;local v53;local v54;local v55;local v56;local v57;while true do local v63=0 + 0;while true do if (v63~=(1 -0)) then else if (v51~=(198 -(59 + 136))) then else local v92=0;local v93;while true do if (0~=v92) then else v93=948 -(828 + 120);while true do if (v93~=1) then else return v55;end if (v93~=0) then else for v100=1,v22() do v53[v100-(1 + 0)]=v27();end for v102=1 -0,v22() do v54[v102]=v22();end v93=1;end end break;end end end if ((2 -1)~=v51) then else v55={v52,v53,nil,v54};v56=v22();v57={};v51=1533 -(178 + 1353);end break;end if (v63==(0 + 0)) then local v75=0 + 0;while true do if (v75~=(1 + 0)) then else v63=1308 -(1074 + 233);break;end if (v75~=(0 + 0)) then else if (v51==0) then local v96=34 -(20 + 14);local v97;while true do if (v96~=(0 + 0)) then else v97=0 -0;while true do if ((1631 -(88 + 1543))~=v97) then else local v113=1642 -(909 + 733);while true do if (v113==0) then v52={};v53={};v113=1606 -(884 + 721);end if (v113~=(1 -0)) then else v97=1460 -(744 + 715);break;end end end if (1~=v97) then else v54={};v51=1 + 0;break;end end break;end end end if (v51~=(1918 -(1564 + 352))) then else local v98=0;while true do if (1==v98) then for v104=1,v22() do local v105=0 -0;local v106;local v107;while true do if (v105==(1604 -(376 + 1228))) then v106=1302 -(1112 + 190);v107=nil;v105=1;end if (v105~=1) then else while true do if (v106~=(1510 -(1076 + 434))) then else v107=v20();if (v19(v107,4 -3,1)==0) then local v116=0 -0;local v117;local v118;local v119;local v120;local v121;local v122;while true do if (v116~=0) then else v117=0 -0;v118=nil;v116=3 -2;end if (v116==(4 -2)) then v121=nil;v122=nil;v116=3;end if (v116==(3 -2)) then v119=nil;v120=nil;v116=2;end if (v116~=(5 -2)) then else while true do if (v117==(394 -(192 + 200))) then v122=nil;while true do if (v118==0) then v119=0;v120=nil;v118=1 -0;end if (v118==(118 -(101 + 15))) then while true do if ((2 + 0)~=v119) then else local v200=0;local v201;while true do if (v200~=(0 + 0)) then else v201=0 + 0;while true do if ((0 -0)==v201) then local v215=0 -0;while true do if (v215~=(0 -0)) then else if (v19(v121,1,1)~=1) then else v122[2]=v57[v122[706 -(471 + 233)]];end if (v19(v121,2,787 -(769 + 16))~=(1 + 0)) then else v122[3]=v57[v122[3 + 0]];end v215=284 -(255 + 28);end if (v215==(1 -0)) then v201=2 -1;break;end end end if (1~=v201) then else v119=2 + 1;break;end end break;end end end if (v119==1) then local v202=0 -0;while true do if (v202==0) then v122={v21(),v21(),nil,nil};if (v120==0) then local v212=0 + 0;while true do if (v212==0) then v122[3]=v21();v122[3 + 1]=v21();break;end end elseif (v120==1) then v122[882 -(864 + 15)]=v22();elseif (v120==2) then v122[4 -1]=v22() -(2^16);elseif (v120==(12 -9)) then local v233=0 -0;local v234;while true do if (v233==0) then v234=0 -0;while true do if (v234==0) then v122[1 + 2]=v22() -(2^16);v122[4 + 0]=v21();break;end end break;end end end v202=952 -(105 + 846);end if (v202==1) then v119=2;break;end end end if ((3 -0)==v119) then if (v19(v121,1336 -(871 + 462),3)==1) then v122[4]=v57[v122[5 -1]];end v52[v104]=v122;break;end if ((0 + 0)==v119) then local v204=0;while true do if (v204~=(4 -3)) then else v119=1;break;end if (v204==(0 -0)) then v120=v19(v107,2,3);v121=v19(v107,4,6);v204=868 -(446 + 421);end end end end break;end if (v118~=(1 + 0)) then else v121=nil;v122=nil;v118=2;end end break;end if ((1394 -(318 + 1075))==v117) then local v170=0;while true do if (v170==1) then v117=2;break;end if (0==v170) then v120=nil;v121=nil;v170=3 -2;end end end if (0~=v117) then else v118=0 -0;v119=nil;v117=1;end end break;end end end break;end end break;end end end v51=12 -9;break;end if ((0 + 0)==v98) then for v108=1,v56 do local v109=0 -0;local v110;local v111;while true do if (v109~=(0 + 0)) then else v110=v20();v111=nil;v109=1;end if (1~=v109) then else if (v110==1) then v111=v20()~=0;elseif (v110==(1 + 1)) then v111=v23();elseif (v110~=3) then else v111=v24();end v57[v108]=v111;break;end end end v55[10 -7]=v20();v98=1;end end end v75=1 + 0;end end end end end end local function v28(v34,v35,v36)local v58=v34[1];local v59=v34[2];local v60=v34[3];return function(...)local v69=1;local v70= -1;local v71={...};local v72=v11("#",...) -1;local function v73()local v76=v58;local v77=Const;local v78=v59;local v79=v60;local v80=v26;local v81={};local v82={};local v83={};for v88=0 -0,v72 do if ((1449<=(1736 + 2255)) and (v88>=v79)) then v81[v88-v79]=v71[v88 + 1];else v83[v88]=v71[v88 + 1 + 0];end end local v84=(v72-v79) + (1 -0);local v85;local v86;while true do local v89=1806 -(137 + 1669);local v90;local v91;while true do if ((v89==(1 -0)) or (4724<=(5629 -(1514 + 167)))) then while true do if (((630 + 49)<=(7475 -4324)) and (v90==(0 + 0))) then v91=0 + 0;while true do if ((v91==0) or ((453 + 369)==(11129 -6477))) then local v112=1242 -((2135 -957) + 64);while true do if (((1881 -1115)<=(1294 + 1978)) and (v112==(1 + 0))) then v91=1 -0;break;end if ((((8130 -(62 + 1657)) -4384)<(10019 -7088)) and (v112==0)) then local v115=0;while true do if ((v115==(1453 -(1220 + 232))) or ((1283 + 198)>=(3651 -2093))) then v112=1 -0;break;end if ((v115==(0 -0)) or (((21934 -17085) -(694 + (6079 -4839)))>(4364 -(140 + 82)))) then v85=v76[v69];v86=v85[1];v115=437 -(305 + 131);end end end end end if ((1==v91) or ((562 -(443 + 102))>(1798 + (6470 -4406)))) then if (((4588 -(664 + 163))>=(3836 -2039)) and (v86<=(17 -7))) then if (((3547 -(162 + 1297))>(211 + 523)) and (v86<=(844 -((1761 -(1167 + 20)) + 266)))) then if ((v86<=1) or ((2660 -(784 + 371))==(1993 -(1072 + 57)))) then if ((v86==(274 -(73 + 201))) or ((2894 + 349)<=1165)) then v83[v85[3 -1]]=v85[5 -2];else local v124=0 -0;local v125;local v126;while true do if (((1316 + 2675)>((1751 -(1071 + 302)) + 842 + 1388)) and (v124==(0 + 0))) then v125=0 -0;v126=nil;v124=1050 -(1037 + 12);end if ((v124==1) or (3657<=(4503 -(296 + 1261)))) then while true do if ((v125==(0 -0)) or (1322==(2258 -(1327 + 174)))) then v126=v85[2];v83[v126]=v83[v126](v12(v83,v126 + 1 + 0,v70));break;end end break;end end end elseif ((v86<=(2 + (1300 -(114 + 1186)))) or (326>=3407)) then local v127=0;local v128;while true do if ((v127==(659 -(446 + 213))) or (4994<=2317)) then v128=v85[5 -3];v83[v128](v12(v83,v128 + 1,v85[(2706 -(612 + 244)) -(147 + 1700)]));break;end end elseif (((448 + 350)<(4314 -(129 + 1230))) and (v86>((110 -(26 + 74)) -(7 + 0)))) then local v143=1402 -((2027 -(264 + 387)) + (90 -64));local v144;local v145;while true do if (((2184 + 2545)>=(3309 -(100 + 487))) and (v143==(0 + 0))) then v144=0 -0;v145=nil;v143=1 + 0;end if ((v143==1) or ((58 + 350)>=((5994 -3596) + 921))) then while true do if (((886 + 1005)<(3327 -(277 + 9))) and ((0 + 0)==v144)) then v145=v85[1 + 1];v83[v145](v83[v145 + (1939 -(164 + 1774))]);break;end end break;end end else local v146=960 -(214 + 746);local v147;local v148;local v149;while true do if ((v146==(0 + 0 + 0)) or ((287 -204)>=(16258 -12020))) then v147=550 -(451 + 99);v148=nil;v146=1;end if ((v146==(2 -1)) or ((2787 -2079)>(478 + 1057))) then v149=nil;while true do if ((v147==(436 -(191 + 245))) or (3077<=(3221 -(967 + 138)))) then local v179=0;while true do if ((3797==(11992 -8195)) and (v179==(0 -0))) then v148=1812 -(1609 + 203);v149=nil;v179=1;end if ((3551==(8665 -5114)) and (v179==1)) then v147=1;break;end end end if (((3662 -((789 -(14 + 312)) + 126))<((15737 -(963 + 551)) -9414)) and (v147==(1 -0))) then while true do if ((v148==(0 + 0)) or ((743 + 340)>(1599 + 2920))) then v149=v85[793 -(138 + 43 + 610)];v83[v149]=v83[v149](v83[v149 + (2 -(1 + 0))]);break;end end break;end end break;end end end elseif ((v86<=(778 -(515 + 256))) or ((13359 -(56 + 10588))==(640 + 3127))) then if ((3669==(5426 -(1311 + 446))) and (v86<=(3 + 2))) then local v129=0 + 0;local v130;local v131;while true do if ((v129==(1 -0)) or (1904==4004)) then v83[v130 + (81 -(70 + 10))]=v131;v83[v130]=v131[v85[11 -7]];break;end if ((3248>(3329 -(1080 + 270))) and ((0 -0)==v129)) then local v169=0;while true do if ((((3168 -(1527 + 36)) + 3196)==(3312 + 1489)) and (v169==(1 + 0))) then v129=(262 + 717) -(729 + 249);break;end if ((v169==0) or (((1939 -(931 + 494)) + 576)==(8588 -(24109 -17883)))) then v130=v85[5 -3];v131=v83[v85[1 + 0 + 2]];v169=1 + 0;end end end end elseif (((47 + 390)==(878 -441)) and (v86==6)) then if ((v83[v85[2 -0]]==v85[4]) or ((6962 -(5015 -(441 + 303)))<(899 + 1295))) then v69=v69 + (778 -(449 + 328));else v69=v85[148 -(67 + 78)];end else v83[v85[(55 -(10 + 44)) + 1]]=v36[v85[(28 -17) -8]];end elseif ((((308 -133) + 18)<=(1369 + 2002)) and (v86<=(5 + 3))) then local v132=697 -(183 + 514);local v133;local v134;local v135;while true do if (((4598 -(1465 + 424))>2494) and (v132==(1517 -(190 + 1326)))) then v135=nil;while true do if ((v133==(1316 -(1012 + 303))) or ((4282 -(155 + 705))<(6885 -4458))) then for v174=2 -1, #v82 do local v175=1391 -(1173 + 218);local v176;local v177;local v178;while true do if ((v175==(1 + 0)) or ((3618 -1529)>=(4370 -(305 + 1293)))) then v178=nil;while true do if ((v176==(0 + 0)) or ((2182 -(88 + 53))>(2334 + 2536))) then local v208=0 + 0;while true do if (((3968 -((1876 -(521 + 836)) + 198))>=(45 + 19)) and (v208==((280 -(253 + 27)) -(0 -0)))) then v177=0 + 0;v178=nil;v208=3 -2;end if (((4158 -(191 + 151))>=(4194 -(1613 + 45))) and (v208==(3 -2))) then v176=206 -(80 + 125);break;end end end if ((27==(825 -(437 + (1062 -(514 + 187))))) and (v176==1)) then while true do if ((v177==(0 -0)) or ((1776 + 2672)>(4806 -(96 + 41)))) then v178=v82[v174];for v216=284 -(208 + 76), #v178 do local v217=(0 + 0) -0;local v218;local v219;local v220;local v221;local v222;while true do if (((251 -114)<=1104) and (v217==(2 + 0 + 0))) then v222=nil;while true do if (((11988 -7579)>(3792 -(28 + 1718))) and (v218==2)) then while true do if ((963>=638) and ((1 + 0)==v219)) then v222=v220[4 -2];if (((v221==v83) and (v222>=v134)) or (((4736 -(869 + 1067)) -(188 + 194))==(1857 -((1382 -(809 + 332)) + 146)))) then local v241=0 + 0;local v242;while true do if (((0 -0)==v241) or (3431<(1391 -(833 + 547)))) then v242=0;while true do if (((6774 -3462)<=(16492 -12920)) and (v242==(0 -0))) then v135[v222]=v221[v222];v220[1]=v135;break;end end break;end end end break;end if (((11393 -6443)==(5841 -(770 + 121))) and (v219==(949 -(704 + 245)))) then local v237=1888 -(1219 + 669);local v238;while true do if ((v237==(0 -0)) or (3985>(11601 -6737))) then v238=0 -0;while true do if (((1320 + 3314)>(608 + 78)) and (v238==(1 + (0 -0)))) then v219=1;break;end if (((13160 -8666)>=(4691 -(636 + 1160))) and (v238==(1041 -(272 + 769)))) then local v243=122 -(114 + 8);while true do if (((7039 -3701)>2126) and (v243==(0 + 0))) then v220=v178[v216];v221=v220[2 -1];v243=1;end if ((2608>(541 + 1088)) and (v243==(1 + 0 + 0))) then v238=(5 -2) -2;break;end end end end break;end end end end break;end if ((((4873 -(209 + 175)) -(1334 + 201))==(2141 + 813)) and (v218==(1 -0))) then local v235=714 -(242 + 472);while true do if ((((867 + 296) -(197 + 966))==v235) or ((3346 -(1428 + 51))==((754 -317) + 1318))) then v221=nil;v222=nil;v235=1 -0;end if ((v235==(1 + (0 -0))) or (2744>2907)) then v218=306 -(62 + (1845 -(535 + 1068)));break;end end end if ((((26025 -16048) -5465)>(1864 + 238)) and ((0 + 0 + 0)==v218)) then local v236=0;while true do if ((((2670 -(265 + 847)) -(218 + 572))<=(2465 -((293 -(29 + 53)) + 1022))) and (v236==0)) then v219=0 -0;v220=nil;v236=1;end if ((v236==(2 -1)) or (4783<=(1263 -587))) then v218=1;break;end end end end break;end if (((14331 -10116)==(4706 -(231 + 260))) and (v217==(0 -0))) then v218=1409 -(936 + 473);v219=nil;v217=1 + 0;end if ((1==v217) or ((2619 + 1565)==(9620 -5401))) then v220=nil;v221=nil;v217=279 -(101 + 176);end end end break;end end break;end end break;end if (((1904 -(392 + (1087 -(631 + 192))))==(2074 -826)) and (v175==(0 -0))) then v176=0;v177=nil;v175=1 -0;end end end break;end if ((v133==(710 -(530 + 180))) or ((2673 + 2069)<(2772 -(188 + 451 + 453)))) then local v172=(0 -0) + 0;while true do if ((v172==1) or (3236<=(2303 -474))) then v133=1 + 0;break;end if (((3071 -(784 + 350))==(85 + 1852)) and (v172==(303 -(79 + 224)))) then v134=v85[(5 -3) -0];v135={};v172=1;end end end end break;end if (((1924 -(797 + 798 + 329))==v132) or ((4221 -(820 + 703))<((1330 -(718 + 199)) + 5))) then v133=(0 -0) + 0;v134=nil;v132=1 + 0;end end elseif ((v86>(3 + 6)) or (2566<(948 -273))) then if (((2610 + 1821)<=(5685 -(370 + 659))) and (v85[2 + 0]==v83[v85[1 + 3]])) then v69=v69 + (133 -(12 + 120));else v69=v85[(3 + 2) -2];end else v83[v85[1779 -(237 + 1540)]][v85[7 -4]]=v83[v85[1 + 3]];end elseif (((6058 -3762)>=((9054 -7017) -(8 + 12))) and (v86<=(256 -(172 + 68)))) then if ((v86<=(51 -38)) or ((2417 + (1529 -755))>(4781 -(157 + 722)))) then if (((330 -210)<=(14652 -11361)) and (v86<=((1755 -(1075 + 677)) + 8))) then v69=v85[7 -4];elseif (((747 -(170 + 33))<(3635 -(410 + 98))) and (v86>(674 -(543 + 119)))) then do return;end else v83[v85[2 + 0]][v85[1050 -(691 + 356)]]=v85[1 + 3 + 0];end elseif ((v86<=(9 + 5)) or ((2070 -1294)>(3855 -1995))) then local v136=0 -0;local v137;local v138;local v139;while true do if ((v136==(1 -0)) or (3573>=(18716 -14031))) then v139=nil;while true do if ((v137==(2 -1)) or ((2698 -(357 + 358))>=4218)) then while true do if ((v138==0) or ((829 + (5179 -(774 + 1119)))<=(576 + 382))) then v139=v85[379 -(208 + 169)];v83[v139]=v83[v139](v12(v83,v139 + 1,v85[4 -1]));break;end end break;end if ((v137==(1338 -(112 + 1226))) or ((3948 -2701)==(3743 -2692))) then local v173=0;while true do if ((((4683 -2359) + 924)>(2077 + 999)) and (v173==(1056 -(259 + 749 + 47)))) then v137=(10 -6) -3;break;end if ((v173==0) or (((19447 -(581 + 392)) -(14826 -(199 + 295)))>4899)) then v138=0 -0;v139=nil;v173=3 -2;end end end end break;end if ((v136==(1078 -(972 + 106))) or (3961<=82)) then v137=0 -0;v138=nil;v136=1 + 0;end end elseif (((6329 -(869 + 741))>(1498 + 862)) and (v86==(882 -(111 + 756)))) then v83[v85[1 + (1519 -(1372 + 146))]]=v28(v78[v85[3]],nil,v36);else local v154=0 + 0;local v155;local v156;local v157;local v158;local v159;while true do if ((v154==1) or ((23413 -18677)<4022)) then v157=nil;v158=nil;v154=2;end if ((v154==(5 -3)) or ((9482 -(8062 -(40 + 997)))>=(3938 -(2425 -1227)))) then v159=nil;while true do if (((1469 + 3299)>(12488 -8793)) and (v155==0)) then v156=v85[2];v157,v158=v80(v83[v156](v12(v83,v156 + (1414 -(1352 + 13 + 48)),v85[2 + 1])));v155=236 -(58 + 177);end if ((2763==(1626 + 1137)) and (v155==(1 + 0))) then v70=(v158 + v156) -(86 -(7 + 78));v159=0 -0;v155=2;end if ((v155==(1571 -((2398 -(1289 + 81)) + 541))) or ((4119 -(1468 + 173))==4292)) then for v182=v156,v70 do local v183=1235 -(213 + 1022);while true do if ((v183==(0 + 0)) or ((111 + 84)<=(1685 -(791 + 888)))) then v159=v159 + 1;v83[v182]=v157[v159];break;end end end break;end end break;end if ((v154==(811 -(425 + 386))) or ((8182 -4977)<((1923 + 77) -(1060 + (1960 -1297))))) then v155=0 + 0;v156=nil;v154=1719 -(1177 + 541);end end end elseif ((v86<=(638 -((1539 -(719 + 405)) + 204))) or ((13885 -9231)==(6106 -3353))) then if ((v86<=(719 -(563 + 139))) or ((558 + 207)>(8914 -6528))) then for v141=v85[983 -(952 + 29)],v85[236 -((1101 -(14 + 954)) + 100)] do v83[v141]=nil;end elseif (((4460 -(443 + 626))>=(2372 + 833)) and (v86==(14 + 4))) then v83[v85[1657 -(258 + 1397)]]();else v83[v85[119 -(72 + 45)]]=v83[v85[3]][v85[2 + 2]];end elseif (((3048 -(1019 + 929))<1409) and (v86<=20)) then v83[v85[2]]=v83[v85[3]];elseif (((1393 + 400)<(10016 -7014)) and (v86==((218 + 813) -(132 + 878)))) then v83[v85[1681 -(326 + 1353)]]=v35[v85[4 -1]];else local v162=0;local v163;local v164;local v165;local v166;while true do if (((1098 + 315)>=(2406 -1237)) and (v162==(3 -(892 -(828 + 63))))) then while true do if ((1301<(508 + (5284 -(742 + 76)))) and (v163==(2 -1))) then v166={};v165=v9({},{__index=function(v184,v185)local v193=0 -0;local v194;local v195;while true do if ((v193==1) or ((323 + 1774 + 1229)>=(6598 -(1369 + 88 + 406)))) then while true do if ((v194==(0 -0)) or ((257 + 959)==(3360 -(1513 + 124)))) then local v213=0 -0;while true do if (((6543 -2889)>=(1575 -(234 + 309))) and (v213==(1765 -((3659 -2351) + 457)))) then local v228=0 + 0 + 0;while true do if ((v228==(1328 -(485 + 843))) or ((1704 + 1353)>(9179 -4722))) then v195=v166[v185];return v195[1][v195[6 -4]];end end end end end end break;end if (((9246 -(19245 -13364))<=(3990 -(88 + 16))) and (v193==(0 + 0 + 0))) then local v209=0 -0;while true do if ((v209==1) or ((1634 + 997)<(2650 -(55 + 722 + 765)))) then v193=1451 -(1007 + 443);break;end if ((v209==(0 -0)) or (((4852 -3285) -(14 + 10))==(723 + 1813))) then v194=0;v195=nil;v209=1;end end end end end,__newindex=function(v186,v187,v188)local v196=0 + 0;local v197;local v198;local v199;while true do if (((2573 -1762)<=((2980 -(261 + 1052)) -388)) and (v196==(0 -0))) then v197=0 -0;v198=nil;v196=667 -(581 + 85);end if ((v196==(2 -1)) or (2537<(1402 + 954))) then v199=nil;while true do if ((v197==(1 + 0)) or ((1272 -612)>(8798 -6225))) then while true do if ((4660==(4993 -(289 + 44))) and (v198==(0 + 0))) then v199=v166[v187];v199[1 -(0 -0)][v199[(3 + 2) -(1643 -(871 + 769))]]=v188;break;end end break;end if ((v197==(438 -((653 -427) + 212))) or ((1588 + 3049)<(3423 -(403 + 32)))) then local v214=0 + 0;while true do if ((v214==(1 -0)) or ((93 + 103)>1333)) then v197=226 -(40 + 185);break;end if ((v214==(100 -(6 + 94))) or ((443 + 4205)<=(5816 -(1036 + 258)))) then v198=(923 -(221 + 702)) + 0;v199=nil;v214=1;end end end end break;end end end});v163=1 + 1;end if ((v163==(1 + 1)) or ((538 -158)>(647 + 2132))) then for v189=1425 -(45 + 160 + 1219),v85[6 -2] do local v190=0;local v191;local v192;while true do if (((4624 -(23 + 2))>=(2457 -(30 + 5))) and (v190==(0 + 0))) then v191=0 + (0 -0);v192=nil;v190=1861 -(1729 + 131);end if ((1449<=(9750 -5274)) and (v190==(284 -((1251 -(1159 + 51)) + 242)))) then while true do if ((v191==(381 -(42 + 338))) or ((639 + 3678)>4622)) then if ((v192[1 + 0]==(97 -(21 + (1327 -(972 + 299))))) or ((769 + 170 + 1145)>=((5994 -(467 + 1326)) -(983 + 173 + 111)))) then v166[v189-(1 + 0)]={v83,v192[11 -8]};else v166[v189-(3 -2)]={v35,v192[2 + 1]};end v82[ #v82 + 1 + 0]=v166;break;end if (((13813 -9636)==(719 + 2410 + 1048)) and (v191==(0 -0))) then local v211=789 -((907 -(269 + 208)) + (1282 -923));while true do if (((3203 -((3243 -(457 + 1018)) + 231))>(3575 -2560)) and ((994 -(248 + (2102 -1357)))==v211)) then v191=1 + 0 + 0;break;end if ((v211==0) or ((3528 -(533 + 133 + 34))<((3 -0) + 37))) then v69=v69 + 1;v192=v76[v69];v211=896 -(664 + 231);end end end end break;end end end v83[v85[2 + 0]]=v28(v164,v165,v36);break;end if ((v163==0) or ((125 + 311)>(2763 -((1032 -319) + 1222)))) then v164=v78[v85[3 + 0]];v165=nil;v163=(2 -0) -1;end end break;end if ((v162==0) or ((3270 -2162)>=(253 + 2150))) then v163=(0 -0) -0;v164=nil;v162=1 -0;end if ((v162==(327 -(96 + 230))) or (3397<=971)) then v165=nil;v166=nil;v162=3 -1;end end end v69=v69 + (1 -0);break;end end break;end end break;end if ((((1125 + 221) -779)<=(150 + 1332)) and (v89==0)) then v90=0 + 0;v91=nil;v89=1 -0;end end end end A,B=v26(v10(v73));if  not A[1] then local v87=v34[4][v69] or "?";error("Script error at ["   .. v87   .. "]:"   .. A[2]);else return v12(A,2,B);end end;end return v28(v27(),{},v16)();end vv8());end
